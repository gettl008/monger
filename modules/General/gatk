#!/usr/bin/env bash
#define MAX_ARG_PAGES 32
set -e
export SHELL=$(type -p bash)
. ~/.bashrc
# freemem=`free | awk '{print $4}'`
# freemem=`echo $freemem | cut -d' ' -f4`
# MEMLIMIT=`expr $freemem \/ 4 \* 3`
export _JAVA_OPTIONS=-Xmx2g
###############################################
MODULE_NAME=`basename "$0" | tr "[a-z]" "[A-Z]"`
module_name=`basename "$0" | tr "[A-Z]" "[a-z]"`
function beginswith { 
	case $2 in 
		"$1"*) true;; 
		*) false;; 
	esac
}
###############################################
###################
### MODULE INFO ###
###################
DESCRIPTION="The Genome Analysis Toolkit or GATK is a software package for analysis of high-throughput sequencing data, developed by the Data Science and Data Engineering group at the Broad Institute. The toolkit offers a wide variety of tools, with a primary focus on variant discovery and genotyping as well as strong emphasis on data quality assurance."
WEBSITE="https://www.broadinstitute.org/gatk/"
CITATIONS=""
MODULE_AUTHOR="Noah Gettle"
YEAR_WRITTEN="2016"
###############################################
MODULE_INFO=\
"DESCRIPTION:\n\
$DESCRIPTION\n\n\
WEBSITE:\n\
$WEBSITE\n\n\
CITATION:\n\
$CITATION\n\n"
AUTHOR_INFO="$MODULE_AUTHOR $YEAR_WRITTEN"

function mongerinstall {
	MODULE_NAME=$1
	shift
	MODULE_INFO=$1
	shift
	AUTHOR_INFO=$1
	shift
	module_name=`echo $MODULE_NAME | tr "[A-Z]" "[a-z]"`
	SUBTHREADS=1
	####################################
	############ USAGE #################
	####################################
	usage=\
"SYNOPSIS:\n\
monger install $module_name\n\n\
$MODULE_INFO\
OPTIONS:\n\
  -i | --install_dir [DIR]\tInstallation directory [/usr/local/]\n\
  -f | --force\t\t\tOverwrite existing program executables.\n\	
  -h | --help\t\t\tPrint help message\n\n\
AUTHOR:\n\
$AUTHOR_INFO"

	####################################
	######## INPUT PROCESSING ##########
	####################################
	INSTALL_DIR=/usr/local
	FORCE=FALSE
	while [ "$1" != "" ]
	do
		case $1 in
			-i | --install_dir)	
				shift
				INSTALL_DIR=$1;;
			-f | --force)
				FORCE=TRUE;;
			-h | --help)
				echo -e $usage
				exit 1;;
			*)	
				echo -e "\nMONGER RUN $MODULE_NAME ERROR: $1 is not a valid option.\n$usage"
				exit 1				
		esac
		shift
	done

	####################################

	PATH_SEP=`echo $PATH | sed 's|:| |g'`
	LD_LIBRARY_PATH_SEP=`echo $LD_LIBRARY_PATH | sed 's|:| |g'`
	INCLUDE_SEP=`echo $INCLUDE | sed 's|:| |g'`

	cur_dir=`pwd`
	DOWNLOAD_DIR=$INSTALL_DIR/soft
	mkdir -p $DOWNLOAD_DIR

	####################################
	####### INSTALL DEPENDENCIES #######
	####################################
	
	monger install picard -i $INSTALL_DIR
	
	###############################################

	####################################
	####### INSTALL MAIN PROGRAM #######
	####################################

	###########
	# GATK #
	###########
	if ! type "gatk.jar" >/dev/null 2>/dev/null || [ $FORCE == "TRUE" ]
	then
		echo -e "> MONGER INSTALL: Installing $MODULE_NAME."
		cd $DOWNLOAD_DIR
		##############################
		mkdir -p $DOWNLOAD_DIR/gatk
		cd $DOWNLOAD_DIR/gatk
		current_dir=`dirname $0`
		cp $current_dir/GenomeAnalysisTK-*.tar.bz2 $DOWNLOAD_DIR/gatk/
		tar -jxvf $DOWNLOAD_DIR/gatk/GenomeAnalysisTK-*.tar.bz2
		cp $DOWNLOAD_DIR/gatk/GenomeAnalysisTK.jar $INSTALL_DIR/bin/gatk.jar
		if ! `grep -q "alias gatk=" ~/.bashrc`
		then
			echo -e "alias gatk=\"java -jar $INSTALL_DIR/bin/gatk.jar\"" >> ~/.bashrc
		else
			installpath=$(echo $INSTALL_DIR | sed 's|\/|\\\/|g')
			newline="alias gatk=\"java -jar $installpath\/bin\/gatk.jar\""
			sed -i "s|alias gatk=.*|$newline|" ~/.bashrc
		fi
		chmod 755 $INSTALL_DIR/bin/gatk.jar
		. ~/.bashrc
		if ! type "gatk.jar" >/dev/null 2>/dev/null 
		then
			echo "MONGER INSTALL ERROR: Something went wrong when installing GATK. Sorry, but you may need to try manual installation."
			exit 1
		fi
		##############################
	else
		echo "> MONGER INSTALL: $MODULE_NAME already installed. Skipping..."
	fi
}

############################################################
if [ "$1" == "run" ]
then
	shift
	run "$MODULE_NAME" "$MODULE_INFO" "$AUTHOR_INFO" $*
elif [ "$1" == "install" ]
then
	shift
	mongerinstall "$MODULE_NAME" "$MODULE_INFO" "$AUTHOR_INFO" $*
else
	echo -e \
"SYNOPSIS:\n\
monger [run|install] $module_name\n\n$MODULE_INFO$AUTHOR_INFO"
	exit 1
fi